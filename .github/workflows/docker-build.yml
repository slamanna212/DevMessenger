name: Docker Build

on:
  push:
    branches: [ "main", "dev" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch complete git history
          ref: ${{ github.sha }}  # Ensure we're on the exact commit

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract git information
        id: git-info
        run: |
          # Force fresh git info extraction
          echo "Current commit (github.sha): ${{ github.sha }}"
          echo "Current ref: ${{ github.ref }}"
          echo "Head ref: ${{ github.head_ref || github.ref_name }}"
          
          # Use GitHub's provided SHA instead of git commands
          COMMIT_HASH="${{ github.sha }}"
          COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s' ${{ github.sha }})
          COMMIT_DATE=$(git log -1 --pretty=format:'%ci' ${{ github.sha }})
          BRANCH_NAME="${{ github.ref_name }}"
          
          echo "commit-hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT
          echo "commit-message=${COMMIT_MESSAGE}" >> $GITHUB_OUTPUT
          echo "commit-date=${COMMIT_DATE}" >> $GITHUB_OUTPUT
          echo "branch=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          
          echo "Git info extracted:"
          echo "  Hash: ${COMMIT_HASH}"
          echo "  Message: ${COMMIT_MESSAGE}"
          echo "  Date: ${COMMIT_DATE}"
          echo "  Branch: ${BRANCH_NAME}"

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Debug metadata
        run: |
          echo "Generated tags: ${{ steps.meta.outputs.tags }}"
          echo "Branch: ${{ github.ref }}"
          echo "Is main branch: ${{ github.ref == 'refs/heads/main' }}"
          echo "Event: ${{ github.event_name }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_COMMIT_HASH=${{ steps.git-info.outputs.commit-hash }}
            GIT_COMMIT_MESSAGE=${{ steps.git-info.outputs.commit-message }}
            GIT_COMMIT_DATE=${{ steps.git-info.outputs.commit-date }}
            GIT_BRANCH=${{ steps.git-info.outputs.branch }}
          no-cache: true 